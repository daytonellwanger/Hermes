package dayton.ellwanger.helpbutton;

import java.util.LinkedList;
import java.util.List;

import org.eclipse.swt.SWT;
import org.eclipse.swt.events.SelectionAdapter;
import org.eclipse.swt.events.SelectionEvent;
import org.eclipse.swt.events.SelectionListener;
import org.eclipse.swt.layout.RowData;
import org.eclipse.swt.layout.RowLayout;
import org.eclipse.swt.widgets.Button;
import org.eclipse.swt.widgets.Composite;
import org.eclipse.swt.widgets.Display;
import org.eclipse.swt.widgets.Label;
import org.eclipse.swt.widgets.Text;
import org.eclipse.ui.part.ViewPart;

import dayton.ellwanger.hermes.SubView;


public class HelpView extends ViewPart implements SubView {
	
	private static final String HELP_BUTTON_STRING = "Request Help";
	private List<HelpListener> helpListeners;
	private Text helpText;
	
	
	public HelpView() {
		helpListeners = new LinkedList<HelpListener>();
	}
	
	public void addHelpListener(HelpListener l) {
		helpListeners.add(l);
	}
	
	public void removeHelpListener(HelpListener l) {
		helpListeners.remove(l);
	}

	@Override
	public void createPartControl(Composite parent) {
		RowLayout parentLayout = new RowLayout();
		parentLayout.type = SWT.VERTICAL;
		parentLayout.pack = true;
		parent.setLayout(parentLayout);
		
		
		Composite difficultyComposite = new Composite(parent, SWT.NONE);
		difficultyComposite.setBackground(Display.getCurrent().getSystemColor(SWT.COLOR_WHITE));
		RowLayout difficultyLayout = new RowLayout();
		difficultyLayout.type = SWT.HORIZONTAL;
		difficultyLayout.pack = true;
		difficultyComposite.setLayout(difficultyLayout);
		
		Label difficultyLabel = new Label(difficultyComposite, SWT.NONE);
		difficultyLabel.setBackground(Display.getCurrent().getSystemColor(SWT.COLOR_WHITE));
		difficultyLabel.setText("Difficulty: ");
		String[] difficultyLabels = {"Trivial", "Easy", "Challenging", "Hard", "Impossible"};
		for(int i = 0; i < difficultyLabels.length; i++) {
			Button button = new Button(difficultyComposite, SWT.RADIO);
			button.setBackground(Display.getCurrent().getSystemColor(SWT.COLOR_WHITE));
			button.setText(difficultyLabels[i]);
			button.addSelectionListener(new DifficultyButtonHandler(i));
		}
		
		
		Composite helpComposite = new Composite(parent, SWT.NONE);
		helpComposite.setBackground(Display.getCurrent().getSystemColor(SWT.COLOR_WHITE));
		RowLayout helpLayout = new RowLayout();
		helpLayout.type = SWT.VERTICAL;
		helpComposite.setLayout(helpLayout);
		
		helpText = new Text(helpComposite, SWT.MULTI | SWT.BORDER |
				SWT.WRAP | SWT.BORDER | SWT.V_SCROLL | SWT.SEARCH);
		helpText.setLayoutData(new RowData(400,70));
		helpText.setMessage("What are you having trouble with?");
		Button helpButton = new Button(helpComposite, SWT.PUSH);
		helpButton.addSelectionListener(new HelpButtonHandler());
		helpButton.setBackground(Display.getCurrent().getSystemColor(SWT.COLOR_WHITE));
		helpButton.setText(HelpView.HELP_BUTTON_STRING);
		helpComposite.pack();
		
		new HelpViewController(this);
	}

	@Override
	public void setFocus() {}
	
	//class HelpTextListener extends 
	class DifficultyButtonHandler extends SelectionAdapter {
		
		int difficulty;
		
		public DifficultyButtonHandler(int difficulty) {
			this.difficulty = difficulty;
		}
		
		@Override
		public void widgetSelected(SelectionEvent e) {
			Button b = (Button) e.getSource();
			if(b.getSelection()) {
				for(HelpListener l : helpListeners) {
					l.difficultyUpdate(difficulty);
				}
			}
		}
	}
	
	class HelpButtonHandler extends SelectionAdapter {

		@Override
		public void widgetSelected(SelectionEvent e) {
			Button b = (Button) e.getSource();
			if(b.getSelection()) {
				for(HelpListener l : helpListeners) {
					l.help(helpText.getText());
				}
			}
		}

	}

}